-- Ð³Ð¾Ð²Ð½Ð¾ÐºÐ¾Ð´ Ð½Ðµ ÑŽÐ·Ð°Ñ‚ÑŒ

local Library = {}
local UIS = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- ðŸŽ¨ Ð¢ÐµÐ¼Ñ‹
local Themes = {
    Evil = {
        Background = Color3.fromRGB(10, 10, 10),
        Header = Color3.fromRGB(20, 20, 20),
        Text = Color3.fromRGB(255, 255, 255),
        Accent = Color3.fromRGB(200, 0, 0),
        Element = Color3.fromRGB(30, 30, 30),
        Gradient = ColorSequence.new{
            ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(200, 0, 0))
        }
    }
}

-- ðŸ”¥ Ð¡Ð¾Ð·Ð´Ð°Ð½Ð¸Ðµ Ð¾ÐºÐ½Ð°
function Library:CreateWindow(opts)
    opts = opts or {}
    local theme = Themes[opts.Theme or "Evil"]

    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = opts.Title or "UI"
    ScreenGui.Parent = game.CoreGui
    ScreenGui.ResetOnSpawn = false

    -- ÐžÐºÐ½Ð¾
    local Main = Instance.new("Frame")
    Main.Size = UDim2.new(0, 520, 0, 340)
    Main.Position = UDim2.new(0.3, 0, 0.3, 0)
    Main.BackgroundColor3 = theme.Background
    Main.Parent = ScreenGui

    local UICorner = Instance.new("UICorner", Main)
    UICorner.CornerRadius = UDim.new(0, 10)

    local UIStroke = Instance.new("UIStroke", Main)
    UIStroke.Thickness = 2
    UIStroke.Color = theme.Accent

    local Gradient = Instance.new("UIGradient", Main)
    Gradient.Color = theme.Gradient
    Gradient.Rotation = 45

    -- Ð—Ð°Ð³Ð¾Ð»Ð¾Ð²Ð¾Ðº
    local Header = Instance.new("TextLabel")
    Header.Size = UDim2.new(1, 0, 0, 40)
    Header.Text = opts.Title or "Window"
    Header.TextColor3 = theme.Text
    Header.Font = Enum.Font.FredokaOne
    Header.TextSize = 22
    Header.BackgroundColor3 = theme.Header
    Header.Parent = Main

    -- Drag
    local dragging, dragStart, startPos
    Header.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = Main.Position
        end
    end)
    UIS.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            Main.Position = UDim2.new(
                startPos.X.Scale, startPos.X.Offset + delta.X,
                startPos.Y.Scale, startPos.Y.Offset + delta.Y
            )
        end
    end)
    UIS.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    -- Ð¢Ð°Ð±-ÐºÐ½Ð¾Ð¿ÐºÐ¸
    local TabButtons = Instance.new("Frame", Main)
    TabButtons.Size = UDim2.new(0, 130, 1, -40)
    TabButtons.Position = UDim2.new(0, 0, 0, 40)
    TabButtons.BackgroundColor3 = theme.Header

    local UIList = Instance.new("UIListLayout", TabButtons)
    UIList.Padding = UDim.new(0, 6)

    local Pages = Instance.new("Frame", Main)
    Pages.Size = UDim2.new(1, -130, 1, -40)
    Pages.Position = UDim2.new(0, 130, 0, 40)
    Pages.BackgroundTransparency = 1

    -- API Tabs
    local Tabs = {}

    function Tabs:NewTab(name)
        local Button = Instance.new("TextButton")
        Button.Size = UDim2.new(1, -10, 0, 28)
        Button.Text = name
        Button.TextColor3 = theme.Text
        Button.Font = Enum.Font.GothamBold
        Button.TextSize = 14
        Button.BackgroundColor3 = theme.Element
        Button.Parent = TabButtons

        local Page = Instance.new("ScrollingFrame", Pages)
        Page.Size = UDim2.new(1, 0, 1, 0)
        Page.Visible = false
        Page.ScrollBarThickness = 4

        local PageLayout = Instance.new("UIListLayout", Page)
        PageLayout.Padding = UDim.new(0, 6)

        Button.MouseButton1Click:Connect(function()
            for _, v in ipairs(Pages:GetChildren()) do
                if v:IsA("ScrollingFrame") then v.Visible = false end
            end
            for _, v in ipairs(TabButtons:GetChildren()) do
                if v:IsA("TextButton") then v.BackgroundColor3 = theme.Element end
            end
            Page.Visible = true
            Button.BackgroundColor3 = theme.Accent
        end)

        -- Ð¿ÐµÑ€Ð²Ñ‹Ð¹ Ñ‚Ð°Ð± Ð°ÐºÑ‚Ð¸Ð²Ð½Ñ‹Ð¹
        if #TabButtons:GetChildren() == 2 then
            Page.Visible = true
            Button.BackgroundColor3 = theme.Accent
        end

        local Sections = {}
        function Sections:NewSection(secName)
            local SectionFrame = Instance.new("Frame", Page)
            SectionFrame.Size = UDim2.new(1, -10, 0, 30)
            SectionFrame.BackgroundTransparency = 1

            local Title = Instance.new("TextLabel", SectionFrame)
            Title.Text = secName
            Title.Size = UDim2.new(1, 0, 0, 20)
            Title.TextColor3 = theme.Text
            Title.Font = Enum.Font.GothamBold
            Title.TextSize = 16
            Title.BackgroundTransparency = 1
            Title.TextXAlignment = Enum.TextXAlignment.Left

            local Elements = {}

            -- Button
            function Elements:NewButton(text, callback)
                local Btn = Instance.new("TextButton", SectionFrame)
                Btn.Size = UDim2.new(1, -10, 0, 30)
                Btn.Text = text
                Btn.TextColor3 = theme.Text
                Btn.Font = Enum.Font.Gotham
                Btn.TextSize = 14
                Btn.BackgroundColor3 = theme.Element
                Btn.MouseButton1Click:Connect(callback or function() end)
            end

            -- Toggle
            function Elements:NewToggle(text, default, callback)
                local Btn = Instance.new("TextButton", SectionFrame)
                Btn.Size = UDim2.new(1, -10, 0, 30)
                Btn.Text = text .. (default and " [ON]" or " [OFF]")
                Btn.TextColor3 = theme.Text
                Btn.BackgroundColor3 = theme.Element
                Btn.Font = Enum.Font.Gotham
                Btn.TextSize = 14

                local state = default or false
                Btn.MouseButton1Click:Connect(function()
                    state = not state
                    Btn.Text = text .. (state and " [ON]" or " [OFF]")
                    Btn.BackgroundColor3 = state and theme.Accent or theme.Element
                    if callback then callback(state) end
                end)
            end

            -- TextBox
            function Elements:NewTextbox(text, placeholder, callback)
                local Box = Instance.new("TextBox", SectionFrame)
                Box.Size = UDim2.new(1, -10, 0, 30)
                Box.PlaceholderText = text
                Box.Text = placeholder or ""
                Box.TextColor3 = theme.Text
                Box.BackgroundColor3 = theme.Element
                Box.Font = Enum.Font.Gotham
                Box.TextSize = 14

                Box.FocusLost:Connect(function(enter)
                    if enter and callback then callback(Box.Text) end
                end)
            end

            return Elements
        end

        return Sections
    end

    return Tabs
end

return Library
